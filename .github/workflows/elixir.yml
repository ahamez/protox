name: Elixir CI

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  MIX_ENV: test
  PROTOBUF_VERSION: 3.14.0

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: ['22.3']
        elixir: ['1.7.4', '1.8.2', '1.9.4', '1.10.4', '1.11.2']

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Elixir
      uses: actions/setup-elixir@v1
      with:
        elixir-version: ${{matrix.elixir}}
        otp-version: ${{matrix.otp}}
    
    - name: Restore dependencies cache
      uses: actions/cache@v2
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}
    
    - name: Restore PLT cache
      uses: actions/cache@v2
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}

    - name: Restore conformance-test-runner
      uses: actions/cache@v2
      with:
        path: conformance
        key: ${{ runner.os }}-${{ PROTOBUF_VERSION }}
    
    - name: Compile conformance-test-runner
      run: |
        wget https://github.com/protocolbuffers/protobuf/archive/v${{ PROTOBUF_VERSION }}.tar.gz
        tar xf v${{ PROTOBUF_VERSION }}.tar.gz
        cd protobuf-${{ PROTOBUF_VERSION }}
        ./autogen.sh
        ./configure --disable-maintainer-mode --disable-dependency-tracking --disable-static
        make
        cd conformance
        make
        cd ..
        mkdir -p ../conformance/.libs
        cp ./conformance/.libs/conformance-test-runner ../../conformance/
        cp ./src/.libs/libprotobuf.so.25.0.0 ../conformance/.libs/libprotobuf.so.25

    - name: Install protoc and conformance-test-runner
      run: |
        wget https://github.com/protocolbuffers/protobuf/releases/download/v3.14.0/protoc-3.14.0-linux-x86_64.zip
        unzip -d protoc protoc-3.14.0-linux-x86_64.zip

    - name: Install dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get
    
    - name: Compile prod with warnings as errors
      # Will be fast as protox is the only thing to compile when MIX_ENV=prod
      run: MIX_ENV=prod mix compile --warnings-as-errors
    
    - name: Run tests
      run: PROTOBUF_CONFORMANCE_RUNNER=./conformance/conformance-test-runner LD_LIBRARY_PATH=./conformance/.libs mix coveralls.github --include conformance
    
    - name: Check formatting
      run: mix format --check-formatted
    
    - name: Credo
      run: mix credo
    
    - name: Dialyzer
      run: mix dialyzer
