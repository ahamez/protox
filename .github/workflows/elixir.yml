name: Elixir CI

env:
  PROTOX_PROTOBUF_VERSION: "29.2"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  MIX_ENV: test
  # Mark Coveralls uploads as part of a parallel build; a finish job will close it
  COVERALLS_PARALLEL: true

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build:
    runs-on: ubuntu-24.04
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}} ${{matrix.name_suffix}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: "1.15"
            otp: "26"
            dialyzer: true
          - elixir: "1.16"
            otp: "26"
            dialyzer: true
          - elixir: "1.17"
            otp: "27"
            check_format: true
            check_deps: true
            dialyzer: true
          - elixir: "1.18"
            otp: "27"
            check_format: true
            check_deps: true
            dialyzer: true
          - elixir: "1.18"
            otp: "27"
            check_format: true
            check_deps: true
            dialyzer: true
            unlock_deps: true
            safe: true
            name_suffix: "(unlock deps)"

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Elixir
        uses: erlef/setup-beam@5304e04ea2b355f03681464e683d92e3b2f18451 # v1.18.2
        with:
          elixir-version: ${{matrix.elixir}}
          otp-version: ${{matrix.otp}}

      - name: Restore dependencies cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}

      - name: Restore PLT cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}

      # - name: Restore conformance_test_runner cache
      #   uses: actions/cache@v4
      #   id: restore_conformance_test_runner
      #   with:
      #     path: conformance_test_runner
      #     key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-protobuf-${{ env.PROTOX_PROTOBUF_VERSION }}

      - name: Unlock all dependencies
        run: mix deps.unlock --all
        if: ${{ matrix.unlock_deps }}

      - name: Install dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Install protoc
        run: |
          wget https://github.com/protocolbuffers/protobuf/releases/download/v${{ env.PROTOX_PROTOBUF_VERSION }}/protoc-${{ env.PROTOX_PROTOBUF_VERSION }}-linux-x86_64.zip
          unzip -d protoc protoc-${{ env.PROTOX_PROTOBUF_VERSION }}-linux-x86_64.zip
          echo "${PWD}/protoc/bin" >> $GITHUB_PATH

      - name: Compile prod with warnings as errors
        run: MIX_ENV=prod mix compile --warnings-as-errors

      - name: Upload _build directory
        uses: actions/upload-artifact@v4
        if: ${{ matrix.safe }}
        with:
          name: build-artifact
          path: _build

      - name: Run tests
        run: mix coveralls.github --parallel --timeout 600000 --include conformance

      # - uses: coverallsapp/github-action@v2
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     flag-name: elixir-${{ matrix.elixir }}-otp-${{ matrix.otp }}
      #     parallel: true

      - name: Check formatting
        run: mix format --check-formatted
        if: ${{ matrix.check_format }}

      - name: Check dependencies
        run: mix deps.unlock --check-unused
        if: ${{ matrix.check_deps }}

      - name: Credo
        run: mix credo

      - name: Dialyzer
        run: mix dialyzer --format github
        if: ${{ matrix.dialyzer }}

  # Signal Coveralls that all parallel jobs finished so it can merge results
  coveralls-finish:
    runs-on: ubuntu-24.04
    needs: build
    if: always()
    steps:
      - name: Coveralls Finished
        # - name: Coveralls Finished (PR)
        # if: ${{ github.event_name == 'pull_request' }}
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
          # Match ExCoveralls build identifier format for PRs
          # build-number: ${{ github.sha }}-PR-${{ github.event.pull_request.number }}

      # - name: Coveralls Finished (push/branch)
      #   if: ${{ github.event_name != 'pull_request' }}
      #   uses: coverallsapp/github-action@v2
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      #     parallel-finished: true
      #     # Match ExCoveralls build identifier for branch pushes
      #     build-number: ${{ github.sha }}

  security-check:
    runs-on: ubuntu-24.04
    needs: build
    container:
      image: erlangsolutions/safe:1.1.0-otp-26
    steps:
      - uses: actions/checkout@v4
      - name: Download _build directory
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: _build
      - run: safe start
        env:
          SAFE_LICENSE: ${{ secrets.SAFE_LICENSE }}
      - name: Persist results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: project-safe-results
          path: _results/<<Project_Name>>.safe
